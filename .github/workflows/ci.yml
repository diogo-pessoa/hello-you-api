name: CI Pipeline

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  lint:
    name: Linting (pylint + flake8)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: Run pylint
        run: |
          source .venv/bin/activate
          pylint app/ --output-format=text --score=yes || true

      - name: Run flake8
        run: |
          source .venv/bin/activate
          flake8 app/ --max-line-length=100 --exclude=__pycache__,.venv,migrations

  tests:
    name: Run Tests with Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: Run tests
        run: |
          source .venv/bin/activate
          pytest tests/ --cov=app --cov-report=term-missing --cov-report=xml -v

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.xml

  security:
    name: Security Scan (bandit)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: Run bandit scan
        run: |
          source .venv/bin/activate
          bandit -r app/ -f json -o bandit-report.json || true

      - name: Upload bandit report
        uses: actions/upload-artifact@v4
        with:
          name: bandit-report
          path: bandit-report.json
